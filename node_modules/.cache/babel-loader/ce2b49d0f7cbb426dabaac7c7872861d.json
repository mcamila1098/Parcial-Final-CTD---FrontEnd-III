{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maria\\\\OneDrive\\\\Escritorio\\\\Certified Tech Developer\\\\Bimestre VI\\\\FrontEnd III\\\\Parcial Final\\\\fe3-final\\\\src\\\\Routes\\\\Home.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport Card from '../Components/Card'; //import { ContextGlobal } from '../Components/utils/global.context'\n\nimport { ThemeContext } from '../Components/utils/global.context'; //Este componente debera ser estilado como \"dark\" o \"light\" dependiendo del theme del Context\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Home = () => {\n  _s();\n\n  const theme = useContext(ThemeContext);\n  const darkMode = theme.state.darkMode;\n  const [dentists, setDentists] = useState([]);\n  const url = `https://jsonplaceholder.typicode.com/users`;\n\n  const getData = async () => {\n    const respuesta = await fetch(url);\n    const respuestaToJson = await respuesta.json();\n    setDentists(respuestaToJson);\n  };\n\n  useEffect(() => {\n    getData();\n  });\n  return (\n    /*#__PURE__*/\n    // <main className=\"\" style={{background:Theme?.backgroundHome, color:Theme?.color}}>\n    _jsxDEV(\"main\", {\n      className: `bg ${darkMode ? \"dark\" : \"main\"}`,\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"Home\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"card-grid\",\n        children: dentists.map(dentist => /*#__PURE__*/_jsxDEV(Card, {\n          name: dentist.name,\n          username: dentist.username,\n          id: dentist.id\n        }, dentist.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }, this)\n  );\n};\n\n_s(Home, \"rXJWqd3CPyf+QYcHqd/TuGYuTkw=\");\n\n_c = Home;\nexport default Home;\n\nvar _c;\n\n$RefreshReg$(_c, \"Home\");","map":{"version":3,"names":["React","useEffect","useState","useContext","Card","ThemeContext","Home","theme","darkMode","state","dentists","setDentists","url","getData","respuesta","fetch","respuestaToJson","json","map","dentist","name","username","id"],"sources":["C:/Users/maria/OneDrive/Escritorio/Certified Tech Developer/Bimestre VI/FrontEnd III/Parcial Final/fe3-final/src/Routes/Home.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react'\r\nimport Card from '../Components/Card'\r\n//import { ContextGlobal } from '../Components/utils/global.context'\r\nimport { ThemeContext } from '../Components/utils/global.context'\r\n\r\n//Este componente debera ser estilado como \"dark\" o \"light\" dependiendo del theme del Context\r\n\r\nconst Home = () => {\r\n\r\n  const theme = useContext(ThemeContext);\r\n  const darkMode = theme.state.darkMode;\r\n\r\n  const [dentists,setDentists] = useState([]);\r\n  const url = `https://jsonplaceholder.typicode.com/users`;\r\n\r\n  const getData = async() => {\r\n    const respuesta = await fetch(url);\r\n    const respuestaToJson = await respuesta.json();\r\n    setDentists(respuestaToJson);\r\n  }\r\n\r\n  useEffect(\r\n    () => {\r\n      getData()\r\n    }\r\n  )\r\n\r\n  return (\r\n    // <main className=\"\" style={{background:Theme?.backgroundHome, color:Theme?.color}}>\r\n    <main className={`bg ${darkMode ? \"dark\" : \"main\"}`}>\r\n      <h1>Home</h1>\r\n      <div className='card-grid'>\r\n        {/* Aqui deberias renderizar las cards */}\r\n        {dentists.map(dentist => \r\n          <Card key={dentist.id} name={dentist.name} username={dentist.username} id={dentist.id}/>  \r\n        )}\r\n      </div>\r\n    </main>\r\n  )\r\n}\r\n\r\nexport default Home"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,EAAqCC,UAArC,QAAuD,OAAvD;AACA,OAAOC,IAAP,MAAiB,oBAAjB,C,CACA;;AACA,SAASC,YAAT,QAA6B,oCAA7B,C,CAEA;;;;AAEA,MAAMC,IAAI,GAAG,MAAM;EAAA;;EAEjB,MAAMC,KAAK,GAAGJ,UAAU,CAACE,YAAD,CAAxB;EACA,MAAMG,QAAQ,GAAGD,KAAK,CAACE,KAAN,CAAYD,QAA7B;EAEA,MAAM,CAACE,QAAD,EAAUC,WAAV,IAAyBT,QAAQ,CAAC,EAAD,CAAvC;EACA,MAAMU,GAAG,GAAI,4CAAb;;EAEA,MAAMC,OAAO,GAAG,YAAW;IACzB,MAAMC,SAAS,GAAG,MAAMC,KAAK,CAACH,GAAD,CAA7B;IACA,MAAMI,eAAe,GAAG,MAAMF,SAAS,CAACG,IAAV,EAA9B;IACAN,WAAW,CAACK,eAAD,CAAX;EACD,CAJD;;EAMAf,SAAS,CACP,MAAM;IACJY,OAAO;EACR,CAHM,CAAT;EAMA;IAAA;IACE;IACA;MAAM,SAAS,EAAG,MAAKL,QAAQ,GAAG,MAAH,GAAY,MAAO,EAAlD;MAAA,wBACE;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAK,SAAS,EAAC,WAAf;QAAA,UAEGE,QAAQ,CAACQ,GAAT,CAAaC,OAAO,iBACnB,QAAC,IAAD;UAAuB,IAAI,EAAEA,OAAO,CAACC,IAArC;UAA2C,QAAQ,EAAED,OAAO,CAACE,QAA7D;UAAuE,EAAE,EAAEF,OAAO,CAACG;QAAnF,GAAWH,OAAO,CAACG,EAAnB;UAAA;UAAA;UAAA;QAAA,QADD;MAFH;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EAFF;AAYD,CAhCD;;GAAMhB,I;;KAAAA,I;AAkCN,eAAeA,IAAf"},"metadata":{},"sourceType":"module"}