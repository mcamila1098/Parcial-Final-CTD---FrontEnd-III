{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maria\\\\OneDrive\\\\Escritorio\\\\Certified Tech Developer\\\\Bimestre VI\\\\FrontEnd III\\\\Parcial Final\\\\fe3-final\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n    _s = $RefreshSig$();\n\nimport { createContext } from \"react\";\nimport { useState } from \"react\";\n/* export const initialState = {theme: \"\", data: []}\r\n\r\nexport const themes = {\r\n  light: {\r\n    font: 'black',\r\n    background: 'white'\r\n  },\r\n  dark: {\r\n    font: 'white',\r\n    background: 'black'\r\n  }\r\n};\r\n\r\nexport const ContextGlobal = createContext();\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\r\n\r\n  return (\r\n    <ContextGlobal.Provider value={{}}>\r\n      {children}\r\n    </ContextGlobal.Provider>\r\n  );\r\n}; */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const initialState = {\n  themes: {\n    light: {\n      font: 'black',\n      background: 'white'\n    },\n    dark: {\n      font: 'white',\n      background: 'black'\n    }\n  }\n};\nexport const ContextGlobal = /*#__PURE__*/createContext(initialState); // Exporta context global\n\nexport const ContextProvider = _ref => {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  // Exporta provider del contexto global\n  // Context de los Themes\n  const [Theme, setTheme] = useState(initialState.themes.light);\n\n  const handleThemeChange = () => {\n    if (Theme === initialState.themes.dark) {\n      setTheme(initialState.themes.light);\n    } else if (Theme === initialState.themes.light) {\n      setTheme(initialState.themes.dark);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ContextGlobal.Provider, {\n    value: {\n      Theme,\n      handleThemeChange\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ContextProvider, \"A4hNlbBFVjrU2PR5E/0MFjbK+0Q=\");\n\n_c = ContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ContextProvider\");","map":{"version":3,"names":["createContext","useState","initialState","themes","light","font","background","dark","ContextGlobal","ContextProvider","children","Theme","setTheme","handleThemeChange"],"sources":["C:/Users/maria/OneDrive/Escritorio/Certified Tech Developer/Bimestre VI/FrontEnd III/Parcial Final/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import { createContext } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\n/* export const initialState = {theme: \"\", data: []}\r\n\r\nexport const themes = {\r\n  light: {\r\n    font: 'black',\r\n    background: 'white'\r\n  },\r\n  dark: {\r\n    font: 'white',\r\n    background: 'black'\r\n  }\r\n};\r\n\r\nexport const ContextGlobal = createContext();\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\r\n\r\n  return (\r\n    <ContextGlobal.Provider value={{}}>\r\n      {children}\r\n    </ContextGlobal.Provider>\r\n  );\r\n}; */\r\n\r\nexport const initialState = {\r\n    themes: {\r\n      light: {\r\n        font: 'black',\r\n        background: 'white'\r\n      },\r\n      dark: {\r\n        font: 'white',\r\n        background: 'black'\r\n      }\r\n    },\r\n}\r\n\r\nexport const ContextGlobal = createContext(initialState); // Exporta context global\r\n\r\nexport const ContextProvider = ({ children }) => { // Exporta provider del contexto global\r\n\r\n    // Context de los Themes\r\n    const [Theme, setTheme] = useState(initialState.themes.light)\r\n    const handleThemeChange = () => {\r\n    if(Theme === initialState.themes.dark){\r\n        setTheme(initialState.themes.light)\r\n    } \r\n    else if(Theme === initialState.themes.light){\r\n        setTheme(initialState.themes.dark)\r\n    } \r\n    }\r\n\r\n    return (\r\n        <ContextGlobal.Provider value={{Theme, handleThemeChange}}>\r\n            {children}\r\n        </ContextGlobal.Provider>\r\n    );\r\n};\r\n\r\n"],"mappings":";;;AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,MAAMC,YAAY,GAAG;EACxBC,MAAM,EAAE;IACNC,KAAK,EAAE;MACLC,IAAI,EAAE,OADD;MAELC,UAAU,EAAE;IAFP,CADD;IAKNC,IAAI,EAAE;MACJF,IAAI,EAAE,OADF;MAEJC,UAAU,EAAE;IAFR;EALA;AADgB,CAArB;AAaP,OAAO,MAAME,aAAa,gBAAGR,aAAa,CAACE,YAAD,CAAnC,C,CAAmD;;AAE1D,OAAO,MAAMO,eAAe,GAAG,QAAkB;EAAA;;EAAA,IAAjB;IAAEC;EAAF,CAAiB;EAAE;EAE/C;EACA,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBX,QAAQ,CAACC,YAAY,CAACC,MAAb,CAAoBC,KAArB,CAAlC;;EACA,MAAMS,iBAAiB,GAAG,MAAM;IAChC,IAAGF,KAAK,KAAKT,YAAY,CAACC,MAAb,CAAoBI,IAAjC,EAAsC;MAClCK,QAAQ,CAACV,YAAY,CAACC,MAAb,CAAoBC,KAArB,CAAR;IACH,CAFD,MAGK,IAAGO,KAAK,KAAKT,YAAY,CAACC,MAAb,CAAoBC,KAAjC,EAAuC;MACxCQ,QAAQ,CAACV,YAAY,CAACC,MAAb,CAAoBI,IAArB,CAAR;IACH;EACA,CAPD;;EASA,oBACI,QAAC,aAAD,CAAe,QAAf;IAAwB,KAAK,EAAE;MAACI,KAAD;MAAQE;IAAR,CAA/B;IAAA,UACKH;EADL;IAAA;IAAA;IAAA;EAAA,QADJ;AAKH,CAlBM;;GAAMD,e;;KAAAA,e"},"metadata":{},"sourceType":"module"}