{"ast":null,"code":"import React, { createContext } from \"react\";\n/* export const initialState = {theme: \"\", data: []}\r\n\r\nexport const ContextGlobal = createContext(undefined);\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\r\n\r\n  return (\r\n    <ContextGlobal.Provider value={{}}>\r\n      {children}\r\n    </ContextGlobal.Provider>\r\n  );\r\n}; */\n\nexport const themes = {\n  light: {\n    font: 'black',\n    background: 'white'\n  },\n  dark: {\n    font: 'white',\n    background: 'black'\n  }\n};\nconst ThemeContext = /*#__PURE__*/createContext(themes.light);\nexport default ThemeContext;","map":{"version":3,"names":["React","createContext","themes","light","font","background","dark","ThemeContext"],"sources":["C:/Users/maria/OneDrive/Escritorio/Certified Tech Developer/Bimestre VI/FrontEnd III/Parcial Final/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import React, { createContext } from \"react\";\r\n\r\n/* export const initialState = {theme: \"\", data: []}\r\n\r\nexport const ContextGlobal = createContext(undefined);\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\r\n\r\n  return (\r\n    <ContextGlobal.Provider value={{}}>\r\n      {children}\r\n    </ContextGlobal.Provider>\r\n  );\r\n}; */\r\n\r\nexport const themes = {\r\n  light: {\r\n    font: 'black',\r\n    background: 'white'\r\n  },\r\n  dark: {\r\n    font: 'white',\r\n    background: 'black'\r\n  }\r\n};\r\n\r\nconst ThemeContext = createContext(themes.light);\r\nexport default ThemeContext;\r\n"],"mappings":"AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,OAAO,MAAMC,MAAM,GAAG;EACpBC,KAAK,EAAE;IACLC,IAAI,EAAE,OADD;IAELC,UAAU,EAAE;EAFP,CADa;EAKpBC,IAAI,EAAE;IACJF,IAAI,EAAE,OADF;IAEJC,UAAU,EAAE;EAFR;AALc,CAAf;AAWP,MAAME,YAAY,gBAAGN,aAAa,CAACC,MAAM,CAACC,KAAR,CAAlC;AACA,eAAeI,YAAf"},"metadata":{},"sourceType":"module"}