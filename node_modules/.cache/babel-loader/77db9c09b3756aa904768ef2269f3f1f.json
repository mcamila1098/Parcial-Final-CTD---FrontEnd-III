{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\maria\\\\OneDrive\\\\Escritorio\\\\Certified Tech Developer\\\\Bimestre VI\\\\FrontEnd III\\\\Parcial Final\\\\fe3-final\\\\src\\\\Components\\\\utils\\\\global.context.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useReducer } from \"react\"; // import { useState } from \"react\";\n\n/* export const initialState = {theme: \"\", data: []}\r\n\r\nexport const themes = {\r\n  light: {\r\n    font: 'black',\r\n    background: 'white'\r\n  },\r\n  dark: {\r\n    font: 'white',\r\n    background: 'black'\r\n  }\r\n};\r\n\r\nexport const ContextGlobal = createContext(undefined);\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\r\n\r\n  return (\r\n    <ContextGlobal.Provider value={{}}>\r\n      {children}\r\n    </ContextGlobal.Provider>\r\n  );\r\n}; */\n\n/* export const initialState = {\r\n  themes: {\r\n      light: {\r\n          backgroundNavbar:\"rgb(223, 219, 219)\",\r\n          backgroundHome:\"white\",\r\n          backgroundFooter:\"#cb3234\",\r\n          color:\"black\"\r\n      },\r\n      dark: {\r\n          backgroundNavbar:\"#161616\",\r\n          backgroundHome:\"#12121296\",\r\n          backgroundFooter:\"#161616\",\r\n          color:\"white\"\r\n      }\r\n  },\r\n}\r\n\r\nexport const ContextGlobal = createContext(initialState); // Exporta context global\r\n\r\nexport const ContextProvider = ({ children }) => { // Exporta provider del contexto global\r\n\r\n    // Context de los Themes\r\n    const [Theme, setTheme] = useState(initialState.themes.light)\r\n    const handleThemeChange = () => {\r\n    if(Theme === initialState.themes.dark){\r\n        setTheme(initialState.themes.light)\r\n    } \r\n    else if(Theme === initialState.themes.light){\r\n        setTheme(initialState.themes.dark)\r\n    } \r\n    }\r\n    // This is the context of the favorites\r\n\r\n    return (\r\n        <ContextGlobal.Provider value={{Theme, handleThemeChange}}>\r\n            {children}\r\n        </ContextGlobal.Provider>\r\n    );\r\n}; */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const ThemeContext = /*#__PURE__*/createContext();\nconst initialState = {\n  darkMode: false\n};\n\nconst themeReducer = (state, action) => {\n  switch (action.type) {\n    case \"LIGHTMODE\":\n      return {\n        darkMode: false\n      };\n\n    case \"DARKMODE\":\n      return {\n        darkMode: true\n      };\n\n    default:\n      return state;\n  }\n};\n\nexport function ThemeProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  const [state, dispatch] = useReducer(themeReducer, initialState);\n  return /*#__PURE__*/_jsxDEV(ThemeContext.Provider, {\n    value: {\n      state,\n      dispatch\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 10\n  }, this);\n}\n\n_s(ThemeProvider, \"6JWkGZ32UPfojeNx+xqn8ZU8A0Q=\");\n\n_c = ThemeProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"ThemeProvider\");","map":{"version":3,"names":["React","createContext","useReducer","ThemeContext","initialState","darkMode","themeReducer","state","action","type","ThemeProvider","children","dispatch","props"],"sources":["C:/Users/maria/OneDrive/Escritorio/Certified Tech Developer/Bimestre VI/FrontEnd III/Parcial Final/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import React, { createContext, useReducer } from \"react\";\r\n// import { useState } from \"react\";\r\n\r\n/* export const initialState = {theme: \"\", data: []}\r\n\r\nexport const themes = {\r\n  light: {\r\n    font: 'black',\r\n    background: 'white'\r\n  },\r\n  dark: {\r\n    font: 'white',\r\n    background: 'black'\r\n  }\r\n};\r\n\r\nexport const ContextGlobal = createContext(undefined);\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\r\n\r\n  return (\r\n    <ContextGlobal.Provider value={{}}>\r\n      {children}\r\n    </ContextGlobal.Provider>\r\n  );\r\n}; */\r\n\r\n/* export const initialState = {\r\n  themes: {\r\n      light: {\r\n          backgroundNavbar:\"rgb(223, 219, 219)\",\r\n          backgroundHome:\"white\",\r\n          backgroundFooter:\"#cb3234\",\r\n          color:\"black\"\r\n      },\r\n      dark: {\r\n          backgroundNavbar:\"#161616\",\r\n          backgroundHome:\"#12121296\",\r\n          backgroundFooter:\"#161616\",\r\n          color:\"white\"\r\n      }\r\n  },\r\n}\r\n\r\nexport const ContextGlobal = createContext(initialState); // Exporta context global\r\n\r\nexport const ContextProvider = ({ children }) => { // Exporta provider del contexto global\r\n\r\n    // Context de los Themes\r\n    const [Theme, setTheme] = useState(initialState.themes.light)\r\n    const handleThemeChange = () => {\r\n    if(Theme === initialState.themes.dark){\r\n        setTheme(initialState.themes.light)\r\n    } \r\n    else if(Theme === initialState.themes.light){\r\n        setTheme(initialState.themes.dark)\r\n    } \r\n    }\r\n    // This is the context of the favorites\r\n\r\n    return (\r\n        <ContextGlobal.Provider value={{Theme, handleThemeChange}}>\r\n            {children}\r\n        </ContextGlobal.Provider>\r\n    );\r\n}; */\r\n\r\nexport const ThemeContext = createContext();\r\n\r\nconst initialState = {\r\n  darkMode: false,\r\n};\r\n\r\nconst themeReducer = (state, action) => {\r\n  switch (action.type) {\r\n    case \"LIGHTMODE\":\r\n      return { darkMode: false };\r\n    case \"DARKMODE\":\r\n      return { darkMode: true };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport function ThemeProvider({children}) {\r\n  const [state, dispatch] = useReducer(themeReducer, initialState);\r\n\r\n  return <ThemeContext.Provider value={{ state, dispatch }}>{props.children}</ThemeContext.Provider>;\r\n}\r\n\r\n\r\n\r\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD,C,CACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;AAEA,OAAO,MAAMC,YAAY,gBAAGF,aAAa,EAAlC;AAEP,MAAMG,YAAY,GAAG;EACnBC,QAAQ,EAAE;AADS,CAArB;;AAIA,MAAMC,YAAY,GAAG,CAACC,KAAD,EAAQC,MAAR,KAAmB;EACtC,QAAQA,MAAM,CAACC,IAAf;IACE,KAAK,WAAL;MACE,OAAO;QAAEJ,QAAQ,EAAE;MAAZ,CAAP;;IACF,KAAK,UAAL;MACE,OAAO;QAAEA,QAAQ,EAAE;MAAZ,CAAP;;IACF;MACE,OAAOE,KAAP;EANJ;AAQD,CATD;;AAWA,OAAO,SAASG,aAAT,OAAmC;EAAA;;EAAA,IAAZ;IAACC;EAAD,CAAY;EACxC,MAAM,CAACJ,KAAD,EAAQK,QAAR,IAAoBV,UAAU,CAACI,YAAD,EAAeF,YAAf,CAApC;EAEA,oBAAO,QAAC,YAAD,CAAc,QAAd;IAAuB,KAAK,EAAE;MAAEG,KAAF;MAASK;IAAT,CAA9B;IAAA,UAAoDC,KAAK,CAACF;EAA1D;IAAA;IAAA;IAAA;EAAA,QAAP;AACD;;GAJeD,a;;KAAAA,a"},"metadata":{},"sourceType":"module"}