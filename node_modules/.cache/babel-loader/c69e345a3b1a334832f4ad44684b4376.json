{"ast":null,"code":"import { createContext } from \"react\";\nimport { useState } from \"react\";\n/* export const initialState = {theme: \"\", data: []}\r\n\r\nexport const themes = {\r\n  light: {\r\n    font: 'black',\r\n    background: 'white'\r\n  },\r\n  dark: {\r\n    font: 'white',\r\n    background: 'black'\r\n  }\r\n};\r\n\r\nexport const ContextGlobal = createContext(undefined);\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\r\n\r\n  return (\r\n    <ContextGlobal.Provider value={{}}>\r\n      {children}\r\n    </ContextGlobal.Provider>\r\n  );\r\n}; */\n\n/* export const initialState = {\r\n  themes: {\r\n      light: {\r\n          backgroundNavbar:\"rgb(223, 219, 219)\",\r\n          backgroundHome:\"white\",\r\n          backgroundFooter:\"#cb3234\",\r\n          color:\"black\"\r\n      },\r\n      dark: {\r\n          backgroundNavbar:\"#161616\",\r\n          backgroundHome:\"#12121296\",\r\n          backgroundFooter:\"#161616\",\r\n          color:\"white\"\r\n      }\r\n  },\r\n}\r\n\r\nexport const ContextGlobal = createContext(initialState); // Exporta context global\r\n\r\nexport const ContextProvider = ({ children }) => { // Exporta provider del contexto global\r\n\r\n    // Context de los Themes\r\n    const [Theme, setTheme] = useState(initialState.themes.light)\r\n    const handleThemeChange = () => {\r\n    if(Theme === initialState.themes.dark){\r\n        setTheme(initialState.themes.light)\r\n    } \r\n    else if(Theme === initialState.themes.light){\r\n        setTheme(initialState.themes.dark)\r\n    } \r\n    }\r\n    // This is the context of the favorites\r\n\r\n    return (\r\n        <ContextGlobal.Provider value={{Theme, handleThemeChange}}>\r\n            {children}\r\n        </ContextGlobal.Provider>\r\n    );\r\n}; */\n\nconst initialState = {\n  darkMode: false\n};\nexport const Themecontext = /*#__PURE__*/createContext();","map":{"version":3,"names":["createContext","useState","initialState","darkMode","Themecontext"],"sources":["C:/Users/maria/OneDrive/Escritorio/Certified Tech Developer/Bimestre VI/FrontEnd III/Parcial Final/fe3-final/src/Components/utils/global.context.jsx"],"sourcesContent":["import { createContext } from \"react\";\r\nimport { useState } from \"react\";\r\n\r\n/* export const initialState = {theme: \"\", data: []}\r\n\r\nexport const themes = {\r\n  light: {\r\n    font: 'black',\r\n    background: 'white'\r\n  },\r\n  dark: {\r\n    font: 'white',\r\n    background: 'black'\r\n  }\r\n};\r\n\r\nexport const ContextGlobal = createContext(undefined);\r\n\r\nexport const ContextProvider = ({ children }) => {\r\n  //Aqui deberan implementar la logica propia del Context, utilizando el hook useMemo\r\n\r\n  return (\r\n    <ContextGlobal.Provider value={{}}>\r\n      {children}\r\n    </ContextGlobal.Provider>\r\n  );\r\n}; */\r\n\r\n/* export const initialState = {\r\n  themes: {\r\n      light: {\r\n          backgroundNavbar:\"rgb(223, 219, 219)\",\r\n          backgroundHome:\"white\",\r\n          backgroundFooter:\"#cb3234\",\r\n          color:\"black\"\r\n      },\r\n      dark: {\r\n          backgroundNavbar:\"#161616\",\r\n          backgroundHome:\"#12121296\",\r\n          backgroundFooter:\"#161616\",\r\n          color:\"white\"\r\n      }\r\n  },\r\n}\r\n\r\nexport const ContextGlobal = createContext(initialState); // Exporta context global\r\n\r\nexport const ContextProvider = ({ children }) => { // Exporta provider del contexto global\r\n\r\n    // Context de los Themes\r\n    const [Theme, setTheme] = useState(initialState.themes.light)\r\n    const handleThemeChange = () => {\r\n    if(Theme === initialState.themes.dark){\r\n        setTheme(initialState.themes.light)\r\n    } \r\n    else if(Theme === initialState.themes.light){\r\n        setTheme(initialState.themes.dark)\r\n    } \r\n    }\r\n    // This is the context of the favorites\r\n\r\n    return (\r\n        <ContextGlobal.Provider value={{Theme, handleThemeChange}}>\r\n            {children}\r\n        </ContextGlobal.Provider>\r\n    );\r\n}; */\r\n\r\nconst initialState = { darkMode: false}\r\n\r\nexport const Themecontext = createContext();\r\n\r\n\r\n\r\n"],"mappings":"AAAA,SAASA,aAAT,QAA8B,OAA9B;AACA,SAASC,QAAT,QAAyB,OAAzB;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,MAAMC,YAAY,GAAG;EAAEC,QAAQ,EAAE;AAAZ,CAArB;AAEA,OAAO,MAAMC,YAAY,gBAAGJ,aAAa,EAAlC"},"metadata":{},"sourceType":"module"}